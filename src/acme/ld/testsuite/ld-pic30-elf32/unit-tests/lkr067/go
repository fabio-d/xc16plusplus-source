#! /bin/sh

#
# CONFIGURATION SECTION
#
if [ -z "$PIC30_CD" ]; then
    echo "Environmental variable PIC30_CD must be set up.";
    exit 1;
fi

GAS30="$PIC30_CD/bin/xc16-as -omf=elf -W"
AR30="$PIC30_CD/bin/xc16-ar -omf=elf"
GLD30="$PIC30_CD/bin/xc16-ld -omf=elf"

#
# END CONFIGURATION
#

# process args
vflag=off
while [ $# -gt 0 ]
do
    case "$1" in
        -v)  vflag=on;;
    esac
    shift
done

rm -f t1.o
$GAS30 -o t1.o -p24FJ128GA006 t1.s
err=$?
if [ $vflag = "on" ]; then
    echo
    echo "$GAS30 -o t1.o -p24FJ128GA006 t1.s"
    echo $err
fi


rm -f t1.a
$AR30 r t1.a t1.o
err=$?
if [ $vflag = "on" ]; then
    echo
    echo "$AR30 r t1.a t1.o"
    echo $err
fi


rm -f t.exe t.map
$GLD30 -o t.exe -p24HJ128GP206 --defsym=U1TXREG=0x90 -u __reset t1.a -T t.gld > temp 2>&1
err=$?
if [ $vflag = "on" ]; then
    echo
    echo "$GLD30 -o t.exe -p24HJ128GP206 --defsym=U1TXREG=0x90 -u __reset t1.a -T t.gld"
    echo $err
    echo
fi

# keep part of the expected error message
grep -o "Warning.*" temp > test.out
rm -f temp

if [ $vflag = "on" ]; then
    echo
    echo "Output from linker:"
    echo
    cat test.out
    echo
fi

echo
echo `head -1 info.txt`

if [ $vflag = "on" ]; then
    diff -b -B test.out expect.out
else
    diff -b -B test.out expect.out > /dev/null
fi

if [ $? -ne 0 ]; then
    echo "ERRORs Detected!!"
    echo
    exit 199
fi

echo "All Tests Pass"
echo
exit 0
