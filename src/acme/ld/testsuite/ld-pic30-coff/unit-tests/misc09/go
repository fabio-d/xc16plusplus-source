#! /bin/sh

#
# CONFIGURATION SECTION
#
if [ -z "$PIC30_CD" ]; then
    echo "Environmental variable PIC30_CD must be set up.";
    exit 1;
fi

GAS30="$PIC30_CD/bin/pic30-as -W"
GLD30=$PIC30_CD/bin/pic30-ld
OBJDUMP=$PIC30_CD/bin/pic30-objdump
LIBPATH=$PIC30_CD/lib

BIN2HEX=$PIC30_CD/bin/pic30-bin2hex
SIM30=$PIC30_CD/bin/sim30

#
# convert paths to DOS, if necessary
#
HOST=`uname`
if ( echo $HOST | grep -i "cygwin" > /dev/null 2>&1 ) ; then
  HOST="cygwin"
  LIBPATH=`cygpath -m $LIBPATH`
fi

#
# END CONFIGURATION
#

# process args
vflag=off
while [ $# -gt 0 ]
do
    case "$1" in
        -v)  vflag=on;;
    esac
    shift
done

rm -f t1.o
$GAS30 -o t1.o t1.s 2> /dev/null
err=$?
if [ $vflag = "on" ]; then
    clear
    echo
    echo "$GAS30 -o t1.o t1.s"
    echo $err
fi

rm -f t2.o
$GAS30 -o t2.o t2.s 2> /dev/null
err=$?
if [ $vflag = "on" ]; then
    echo "$GAS30 -o t2.o t2.s"
    echo $err
fi


rm -f t.exe
$GLD30 -o t.exe t1.o t2.o -L $LIBPATH -lpic30 || exit 99
err=$?
if [ $vflag = "on" ]; then
    echo "$GLD30 -o t.exe t1.o t2.o -L $LIBPATH -lpic30"
    echo $err
fi

rm -f t.hex
$BIN2HEX t.exe > /dev/null
err=$?
if [ $vflag = "on" ]; then
    echo
    echo "$BIN2HEX t.exe"
    echo $err
fi

rm -f test.out
$SIM30 run.cmd > /dev/null
err=$?
if [ $vflag = "on" ]; then
    echo
    echo "$SIM30 run.cmd"
    echo $err
fi
cp UartOut.txt test.out
rm -f UartOut.txt

# now repeat test with --no-handles
rm -f t.exe
$GLD30 -o t.exe t1.o t2.o -L $LIBPATH -lpic30 --no-handles|| exit 99
err=$?
if [ $vflag = "on" ]; then
    echo "$GLD30 -o t.exe t1.o t2.o -L $LIBPATH -lpic30 --no-handles"
    echo $err
fi

rm -f t.hex
$BIN2HEX t.exe > /dev/null
err=$?
if [ $vflag = "on" ]; then
    echo
    echo "$BIN2HEX t.exe"
    echo $err
fi

$SIM30 run.cmd > /dev/null
err=$?
if [ $vflag = "on" ]; then
    echo
    echo "$SIM30 run.cmd"
    echo $err
fi
echo "with --no-handles:" >> test.out
cat UartOut.txt >>test.out
rm -f UartOut.txt

echo
echo `head -1 info.txt`

if [ $vflag = "on" ]; then
    diff -b -B test.out expect.out
else
    diff -b -B test.out expect.out > /dev/null
fi


if [ $? -ne 0 ]; then
    echo "ERRORs Detected!!"
    echo
    exit 199
fi

echo "All Tests Pass"
echo
exit 0
