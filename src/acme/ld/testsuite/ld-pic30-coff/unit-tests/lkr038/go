#! /bin/sh

#
# CONFIGURATION SECTION
#
if [ -z "$PIC30_CD" ]; then
    echo "Environmental variable PIC30_CD must be set up.";
    exit 1;
fi

GAS30="$PIC30_CD/bin/xc16-as -W"
GLD30=$PIC30_CD/bin/xc16-ld
LIB_PATH=$PIC30_CD/lib

#
# END CONFIGURATION
#

# process args
vflag=off
while [ $# -gt 0 ]
do
    case "$1" in
        -v)  vflag=on;;
    esac
    shift
done

rm -f t1.o
$GAS30 -o t1.o t1.s
err=$?
if [ $vflag = "on" ]; then
    echo
    echo "$GAS30 -o t1.o t1.s"
    echo $err
fi

rm -f t.exe t.map
$GLD30 -o t.exe t1.o -Map=t.map
err=$?
if [ $vflag = "on" ]; then
    echo
    echo "$GLD30 -o t.exe t1.o -Map=t.map"
    echo $err
    echo
fi

# extract info about section foo
LINE1=`perl -n -e 'if (/(^section.*address.*len.*len.*$)/) {print "$1\n"}' t.map`
LINE2=`perl -n -e 'if (/(^-{7}\s+-{7}\s+-{17}\s+-{20}.*$)/) {print "$1\n"}' t.map`
LINE3=`perl -n -e 'if (/(^\.eedata\s+\w+\s+\w+\s+\w+.*$)/) {print "$1\n"}' t.map`

# build an output file
rm -f test.out
{
    echo
    echo "Excerpt from link map:"
    echo
    echo "$LINE1"
    echo "$LINE2"
    echo "$LINE3"
    echo
} > test.out

if [ $vflag = "on" ]; then
    cat test.out
fi

echo
echo `head -1 info.txt`

if [ $vflag = "on" ]; then
    diff -b -B test.out expect.out
else
    diff -b -B test.out expect.out > /dev/null
fi

if [ $? -ne 0 ]; then
    echo "ERRORs Detected!!"
    echo
    exit 199
fi

echo "All Tests Pass"
echo
exit 0
