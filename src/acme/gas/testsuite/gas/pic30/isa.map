#
# opcode map for pic30 (single-word) instructions
#
# based on ISA Rev B released 7/27/2001
# modified for ISA Rev C released 11/20/2001 (je)

# Move Operations
exch;1111 1101 0000 0ddd d000 ssss
mov.d;1011 1110 0000 0ddd dppp ssss
pop.d;1011 1110 0000 0ddd d100 1111
mov.w;1000 0fff ffff ffff ffff dddd
mov;1001 0kkk kBkk kddd dkkk ssss
mov;0111 1www wBhh hddd dggg ssss
pop;0111 1000 0000 0ddd d100 1111
push;0111 1000 0001 1111 1000 ssss
mov;1011 1111 1BDf ffff ffff ffff
mov.w;0010 kkkk kkkk kkkk kkkk dddd
mov.b;1011 0011 11kk kkkk kkkk dddd
mov;1011 0111 1B1f ffff ffff ffff
mov.d;1011 1110 10qq qddd d000 ssss
push.d;1011 1110 1001 1111 1000 ssss
mov.w;1000 1fff ffff ffff ffff ssss
mov;1001 1kkk kBkk kddd dkkk ssss

# Table Operations
tblrdh;1011 1010 1Bqq qddd dppp ssss
tblrdl;1011 1010 0Bqq qddd dppp ssss
tblwth;1011 1011 1Bqq qddd dppp ssss
tblwtl;1011 1011 0Bqq qddd dppp ssss

# Math Operations - W Registers
add;0100 0www wBqq qddd dppp ssss
addc;0100 1www wBqq qddd dppp ssss
and;0110 0www wBqq qddd dppp ssss
ior;0111 0www wBqq qddd dppp ssss
sub;0101 0www wBqq qddd dppp ssss
subb;0101 1www wBqq qddd dppp ssss
subr;0001 0www wBqq qddd dppp ssss
subbr;0001 1www wBqq qddd dppp ssss
xor;0110 1www wBqq qddd dppp ssss

# Math Operations - Short Literals
add;0100 0www wBqq qddd d11k kkkk
addc;0100 1www wBqq qddd d11k kkkk
and;0110 0www wBqq qddd d11k kkkk
ior;0111 0www wBqq qddd d11k kkkk
sub;0101 0www wBqq qddd d11k kkkk
subb;0101 1www wBqq qddd d11k kkkk
subr;0001 0www wBqq qddd d11k kkkk
subbr;0001 1www wBqq qddd d11k kkkk
xor;0110 1www wBqq qddd d11k kkkk

# Math Operations - W Registers Single Operand
clr;1110 1011 0Bqq qddd d000 0000
com;1110 1010 1Bqq qddd dppp ssss
dec;1110 1001 0Bqq qddd dppp ssss
dec2;1110 1001 1Bqq qddd dppp ssss
inc;1110 1000 0Bqq qddd dppp ssss
inc2;1110 1000 1Bqq qddd dppp ssss
neg;1110 1010 0Bqq qddd dppp ssss
setm;1110 1011 1Bqq qddd d000 0000

# Math Operations - File Registers
add;1011 0100 0BDf ffff ffff ffff
addc;1011 0100 1BDf ffff ffff ffff
and;1011 0110 0BDf ffff ffff ffff
ior;1011 0111 0BDf ffff ffff ffff
subr;1011 1101 0BDf ffff ffff ffff
subbr;1011 1101 1BDf ffff ffff ffff
sub;1011 0101 0BDf ffff ffff ffff
subb;1011 0101 1BDf ffff ffff ffff
xor;1011 0110 1BDf ffff ffff ffff

# Math Operations - File Registers Single Operand
clr;1110 1111 0BDf ffff ffff ffff
com;1110 1110 1BDf ffff ffff ffff
dec;1110 1101 0BDf ffff ffff ffff
dec2;1110 1101 1BDf ffff ffff ffff
inc;1110 1100 0BDf ffff ffff ffff
inc2;1110 1100 1BDf ffff ffff ffff
neg;1110 1110 0BDf ffff ffff ffff
setm;1110 1111 1BDf ffff ffff ffff

# Math Operations - 10-bit Literals
add;1011 0000 0Bkk kkkk kkkk dddd
addc;1011 0000 1Bkk kkkk kkkk dddd
and;1011 0010 0Bkk kkkk kkkk dddd
ior;1011 0011 0Bkk kkkk kkkk dddd
sub;1011 0001 0Bkk kkkk kkkk dddd
subb;1011 0001 1Bkk kkkk kkkk dddd
xor;1011 0010 1Bkk kkkk kkkk dddd

# Math Operations - Multiply, Adjust
daw.b;1111 1101 0100 0000 0000 ssss
divf;1101 1001 0www w000 0000 ssss
div.sw;1101 1000 0000 0www w000 ssss
div.sd;1101 1000 0ttt tvvv v100 ssss
div.uw;1101 1000 1000 0www w000 ssss
div.ud;1101 1000 1ttt tvvv v100 ssss
mul.ss;1011 1001 1www wddd dppp ssss
mul.su;1011 1001 0www wddd dppp ssss
mul.su;1011 1001 0www wddd d11k kkkk
mul.uu;1011 1000 0www wddd dppp ssss
mul.uu;1011 1000 0www wddd d11k kkkk
mul.us;1011 1000 1www wddd dppp ssss
mul;1011 1100 0B0f ffff ffff ffff
se;1111 1011 0000 0ddd dppp ssss
ze;1111 1011 1000 0ddd dppp ssss
swap;1111 1101 1B00 0000 0000 ssss

# Rotate/Shift Operations - W Registers
asr;1101 0001 1Bqq qddd dppp ssss
lsr;1101 0001 0Bqq qddd dppp ssss
rlc;1101 0010 1Bqq qddd dppp ssss
rlnc;1101 0010 0Bqq qddd dppp ssss
rrc;1101 0011 1Bqq qddd dppp ssss
rrnc;1101 0011 0Bqq qddd dppp ssss
sl;1101 0000 0Bqq qddd dppp ssss

# Rotate/Shift Operations - File Registers
asr;1101 0101 1BDf ffff ffff ffff
lsr;1101 0101 0BDf ffff ffff ffff
rlc;1101 0110 1BDf ffff ffff ffff
rlnc;1101 0110 0BDf ffff ffff ffff
rrc;1101 0111 1BDf ffff ffff ffff
rrnc;1101 0111 0BDf ffff ffff ffff
sl;1101 0100 0BDf ffff ffff ffff

# Barrel Shift Operations - W Registers
asr.w;1101 1110 1www wddd d000 ssss
lsr.w;1101 1110 0www wddd d000 ssss
sl.w;1101 1101 0www wddd d000 ssss

# Barrel Shift Operations - Short Literals
asr.w;1101 1110 1www wddd d100 kkkk
lsr.w;1101 1110 0www wddd d100 kkkk
sl.w;1101 1101 0www wddd d100 kkkk

# DSP Operations - Accumulator Ops
add;1100 1011 A000 0000 0000 0000
add;1100 1001 Awww wrrr rggg ssss
lac;1100 1010 Awww wrrr rggg ssss
neg;1100 1011 A001 0000 0000 0000
sac;1100 1100 Awww wrrr rhhh dddd
sftac;1100 1000 A000 0000 0000 ssss
sftac;1100 1000 A000 0000 01kk kkkk
sac.r;1100 1101 Awww wrrr rhhh dddd
sub;1100 1011 A011 0000 0000 0000

# DSP Operations - MAC Ops
clr;1100 0011 A0xx yyii iijj jjaa
ed;1111 00mm A1xx 00ii iijj jj11
edac;1111 00mm A1xx 00ii iijj jj10
mac;1100 0mmm A0xx yyii iijj jjaa
movsac;1100 0111 A0xx yyii iijj jjaa
mpy;1100 0mmm A0xx yyii iijj jj11
mpy.n;1100 0mmm A1xx yyii iijj jj11
msc;1100 0mmm A1xx yyii iijj jjaa
mpy;1111 00mm A0xx yyii iijj jj01
mac;1111 00mm A0xx yyii iijj jj00

# Bit Operations - W Registers
bclr.b;1010 0001 0bbb 0100 0ppp ssss
bclr.w;1010 0001 bbbb 0000 0ppp ssss
bset.b;1010 0000 0bbb 0100 0ppp ssss
bset.w;1010 0000 bbbb 0000 0ppp ssss
bsw;1010 1101 Zwww w000 0ppp ssss
btg.b;1010 0010 0bbb 0100 0ppp ssss
btg.w;1010 0010 bbbb 0000 0ppp ssss
btst;1010 0011 bbbb Z000 0ppp ssss
btsts;1010 0100 bbbb Z000 0ppp ssss
btst;1010 0101 Zwww w000 0ppp ssss

# Bit Operations - File Registers
bclr.b;1010 1001 bbbf ffff ffff ffff
bset.b;1010 1000 bbbf ffff ffff ffff
btg.b;1010 1010 bbbf ffff ffff ffff
btst.b;1010 1011 bbbf ffff ffff ffff
btsts.b;1010 1100 bbbf ffff ffff ffff

# Bit Find Operations
fbcl;1101 1111 0000 0ddd dppp ssss
ff1l;1100 1111 1000 0ddd dppp ssss
ff1r;1100 1111 0000 0ddd dppp ssss

# Skip Operations - W Registers
btsc.w;1010 0111 bbbb 0000 0ppp ssss
btss.w;1010 0110 bbbb 0000 0ppp ssss

# Skip Operations - File Registers
btsc.b;1010 1111 bbbf ffff ffff ffff
btss.b;1010 1110 bbbf ffff ffff ffff

# Compare Operations - W Registers
cp0;1110 0000 0000 0B00 0ppp ssss
cp;1110 0001 0www wB00 0ppp ssss
cpb;1110 0001 1www wB00 0ppp ssss

# Compare Operations - Short Literals
cp;1110 0001 0www wB00 011k kkkk
cpb;1110 0001 1www wB00 011k kkkk

# Compare Operations - File Registers
cp0;1110 0010 0B0f ffff ffff ffff
cp;1110 0011 0B0f ffff ffff ffff
cpb;1110 0011 1B0f ffff ffff ffff

# Compare Skip Operations - File Registers
cpseq;1110 0111 1www wB00 0000 ssss
cpsgt;1110 0110 0www wB00 0000 ssss
cpslt;1110 0110 1www wB00 0000 ssss
cpsne;1110 0111 0www wB00 0000 ssss

# Branch Operations
#	NOTE: Commented instructions require linker to evaluate
#	address therefore they are not tested here
#bra, c;0011 0001 nnnn nnnn nnnn nnnn
#bra, geu;0011 0001 nnnn nnnn nnnn nnnn
#bra, ge;0011 1101 nnnn nnnn nnnn nnnn
#bra, gt;0011 1100 nnnn nnnn nnnn nnnn
#bra, gtu;0011 1110 nnnn nnnn nnnn nnnn
#bra, le;0011 0100 nnnn nnnn nnnn nnnn
#bra, leu;0011 0110 nnnn nnnn nnnn nnnn
#bra, lt;0011 0101 nnnn nnnn nnnn nnnn
#bra, n;0011 0011 nnnn nnnn nnnn nnnn
#bra, nc;0011 1001 nnnn nnnn nnnn nnnn
#bra, ltu;0011 1001 nnnn nnnn nnnn nnnn
#bra, nn;0011 1011 nnnn nnnn nnnn nnnn
#bra, nov;0011 1000 nnnn nnnn nnnn nnnn
#bra, nz;0011 1010 nnnn nnnn nnnn nnnn
#bra, oa;0000 1100 nnnn nnnn nnnn nnnn
#bra, ob;0000 1101 nnnn nnnn nnnn nnnn
#bra, ov;0011 0000 nnnn nnnn nnnn nnnn
#bra;0011 0111 nnnn nnnn nnnn nnnn
#bra, sa;0000 1110 nnnn nnnn nnnn nnnn
#bra, sb;0000 1111 nnnn nnnn nnnn nnnn
#bra, z;0011 0010 nnnn nnnn nnnn nnnn

# Jump/Call/Return Operations
#	NOTE: Commented instructions require linker to evaluate
#	address therefore they are not tested here
bra;0000 0001 0110 0000 0000 ssss
##call;0000 0010 nnnn nnnn nnnn nnn0 0000 0000 0000 0000 0nnn nnnn
call;0000 0001 0000 0000 0000 ssss
##goto;0000 0100 nnnn nnnn nnnn nnn0 0000 0000 0000 0000 0nnn nnnn
goto;0000 0001 0100 0000 0000 ssss
##rcall;0000 0111 nnnn nnnn nnnn nnnn
rcall;0000 0001 0010 0000 0000 ssss
retfie;0000 0110 0100 0000 0000 0000
retlw;0000 0101 0Bkk kkkk kkkk dddd
return;0000 0110 0000 0000 0000 0000

# Looping Operations
#	NOTE: Commented instructions require linker to evaluate
#	address therefore they are not tested here
##do;0000 1000 00kk kkkk kkkk kkkk 0000 0000 nnnn nnnn nnnn nnnn
##do;0000 1000 1000 0000 0000 ssss 0000 0000 nnnn nnnn nnnn nnnn
repeat;0000 1001 00kk kkkk kkkk kkkk
repeat;0000 1001 1000 0000 0000 ssss

# Stack Operations
pop.s;1111 1110 1000 0000 0000 0000
lnk;1111 1010 00kk kkkk kkkk kkkk
pop;1111 1001 ffff ffff ffff ffff
push;1111 1000 ffff ffff ffff ffff
push.s;1111 1110 1010 0000 0000 0000
ulnk;1111 1010 1000 0000 0000 0000

# Control Operations
clrwdt;1111 1110 0110 0000 0000 0000
disi;1111 1100 00kk kkkk kkkk kkkk
nop;0000 0000 0000 0000 0000 0000
nopr;1111 1111 0000 0000 0000 0000
pwrsav;1111 1110 0100 0000 0000 000k
reset;1111 1110 0000 0000 0000 0000
#

























